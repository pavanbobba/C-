!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DeleteNode	Interview_Practice/Qualcomm/linked_list_ops.c	/^void DeleteNode(int n)$/;"	f
DisplayList	Interview_Practice/Qualcomm/linked_list_ops.c	/^void DisplayList(void)$/;"	f
InsertNode	Interview_Practice/Qualcomm/linked_list_ops.c	/^void InsertNode(int n)$/;"	f
Memcpy_web	Interview_Practice/Qualcomm/memcpy_impl.c	/^void * Memcpy_web(void* dst, const void* src, unsigned int cnt)$/;"	f
Myprintf	Interview_Practice/Qualcomm/printf_web.c	/^void Myprintf(char* format,...) $/;"	f
ReverseList	Interview_Practice/Qualcomm/linked_list_ops.c	/^void ReverseList()$/;"	f
add	Interview_Practice/Qualcomm/inline_func.c	/^void inline add(int a, int b)$/;"	f
arrayManipulation	hackerrank/max_num.c	/^long arrayManipulation(int n, int queries_rows, int queries_columns, int (* queries)[3])$/;"	f
call_num	Interview_Practice/Arm/prevent_stack_overflow.c	/^static int call_num;$/;"	v	file:
convert	Interview_Practice/Qualcomm/printf_decl.c	/^char *convert(int num, int base)$/;"	f
convert	Interview_Practice/Qualcomm/printf_web.c	/^char *convert(unsigned int num, int base) $/;"	f
data	Interview_Practice/Qualcomm/linked_list_ops.c	/^	int data;$/;"	m	struct:list	file:
do_sort	merge_sort.c	/^void do_sort(int *arr, int low, int high)$/;"	f
getlength	Interview_Practice/Qualcomm/atoi_impl.c	/^int getlength(char *str)$/;"	f
getlength	Interview_Practice/Qualcomm/strcmp_impl.c	/^int getlength(char *str)$/;"	f
getlength	Interview_Practice/Qualcomm/strrev_impl.c	/^int getlength(char *str)$/;"	f
handler	Interview_Practice/Qualcomm/stack_overflow.c	/^void handler(int signum)$/;"	f
head	Interview_Practice/Qualcomm/linked_list_ops.c	/^static struct list *head = NULL;$/;"	v	typeref:struct:list	file:
list	Interview_Practice/Qualcomm/linked_list_ops.c	/^struct list{$/;"	s	file:
main	Interview_Practice/Arm/prevent_stack_overflow.c	/^int main()$/;"	f
main	Interview_Practice/Arm/ptrace_understand.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/atoi_impl.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/find_endian.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/hex_to_bin.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/inline_func.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/inline_func.s	/^main:$/;"	l
main	Interview_Practice/Qualcomm/linked_list_ops.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/malloc_func.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/malloc_impl.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/memcpy_impl.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/print_process_details.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/printf_decl.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/printf_web.c	/^int main() $/;"	f
main	Interview_Practice/Qualcomm/sizeof_impl.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/stack_overflow.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/strcmp_impl.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/strrev_impl.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/swap_nibbles.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/test.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/valgrind_understand.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/var_storage.c	/^int main()$/;"	f
main	Interview_Practice/Qualcomm/write_stdout.c	/^int main()$/;"	f
main	change_priority.c	/^int main()$/;"	f
main	hackerrank/max_num.c	/^int main()$/;"	f
main	hackerrank/minimmum_swaps.c	/^int main()$/;"	f
main	hackerrank/print_dd_array.c	/^int main()$/;"	f
main	merge_sort.c	/^int main()$/;"	f
merge	merge_sort.c	/^void merge(int *arr, int low, int mid, int high)$/;"	f
minimumSwaps	hackerrank/minimmum_swaps.c	/^int minimumSwaps(int arr_count, int* arr) $/;"	f
my_atoi	Interview_Practice/Qualcomm/atoi_impl.c	/^int my_atoi(char *num)$/;"	f
my_memcpy	Interview_Practice/Qualcomm/memcpy_impl.c	/^void *my_memcpy(void *dest, void *src, int n)$/;"	f
my_print	Interview_Practice/Qualcomm/write_stdout.c	/^int my_print(int n)$/;"	f
my_printf	Interview_Practice/Qualcomm/printf_decl.c	/^int my_printf(char *fmt, ...)$/;"	f
my_sizeof	Interview_Practice/Qualcomm/sizeof_impl.c	2;"	d	file:
my_strcmp	Interview_Practice/Qualcomm/strcmp_impl.c	/^void my_strcmp(char *str1, char *str2)$/;"	f
my_strrev	Interview_Practice/Qualcomm/strrev_impl.c	/^void my_strrev(char *str)$/;"	f
next	Interview_Practice/Qualcomm/linked_list_ops.c	/^	struct list *next;$/;"	m	struct:list	typeref:struct:list::list	file:
overflow	Interview_Practice/Qualcomm/stack_overflow.c	/^static bool overflow = false;$/;"	v	file:
printbits	Interview_Practice/Qualcomm/hex_to_bin.c	/^void printbits(unsigned int n)$/;"	f
printbits	Interview_Practice/Qualcomm/swap_nibbles.c	/^void printbits(int n)$/;"	f
printlimits	Interview_Practice/Qualcomm/print_process_details.c	/^void printlimits(int resource)$/;"	f
recurse	Interview_Practice/Qualcomm/stack_overflow.c	/^void recurse()$/;"	f
recursive	Interview_Practice/Arm/prevent_stack_overflow.c	/^void recursive(void)$/;"	f
stack_initial_addr	Interview_Practice/Arm/prevent_stack_overflow.c	/^static char * stack_initial_addr;$/;"	v	file:
stack_limit	Interview_Practice/Arm/prevent_stack_overflow.c	/^static long unsigned int stack_limit;$/;"	v	file:
stack_limit	Interview_Practice/Qualcomm/stack_overflow.c	/^static unsigned int stack_limit;$/;"	v	file:
stack_size	Interview_Practice/Qualcomm/stack_overflow.c	/^static unsigned int stack_size;$/;"	v	file:
swap_nibble	Interview_Practice/Qualcomm/swap_nibbles.c	/^void swap_nibble(int n)$/;"	f
times	Interview_Practice/Arm/prevent_stack_overflow.c	/^static int times = 1;$/;"	v	file:
x	Interview_Practice/Qualcomm/var_storage.c	/^int x = 10;$/;"	v
